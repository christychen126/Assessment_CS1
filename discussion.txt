Runtime

1. What determines the workload of figuring out whether your box of animal crackers contains an elephant?
O(n)

2 Order the following runtimes in descending order of efficiency:

O(1)
O(log n)
O(n)
O(n log n)
O(n2)
O(2n) (i.e. 2 to the n-th power)


Stacks and Queues

1. In the following cases, would a stack or queue be a more appropriate data structure?
    1. The process of loading and unloading pallets onto a flatbed truck 
        Stack
    2. Putting bottle caps on bottles of beer as they roll down an assembly line 
        Queue
    3. Calculating the solution to this mathematical expression: 2 + (7 * 4) - (3 / 2)
        Neither. * and / has higher priority so (7*4) and (3/2) will be calculated first,
        then thats from the beginning.

2. Describe two more situations where a queue would be an appropriate data structure.
    Taking care of customers in cashier line.
    Theme park roller coaster line.

3. Describe two more situations where a stack would be an appropriate data structure.
    The last Pringles gets put in the can gets eaten first.
    The paper stack in printer


Linked Lists

Given the linked list below, which are the nodes? What is the data for each node? Where is the head? Where is the tail? (Please be as specific as possible — exactly which parts of the diagram correspond to each part? Arrows? Boxes? Text?)
nodes: Apple box, Berry box, Cherry box
Data: Apple text, Berry text, Cherry, text
Head: Apple node
Tail: Cherry node

What’s the difference between doubly- and singly-linked lists?
Doubly linked lists have both the "previous" and "next".
singly linked lists only have the "next".


Why is it faster to append to a linked list if we keep track of the tail as an attribute?
We can directly append to the tail of a linked list without iterate trought the whole list. 



Trees


Given the tree above, in what order would a Breadth First Search (BFS) algorithm visit each node until finding burrito (starting at food)? Just list the order of nodes visited; no need to recreate the state of the algorithm data in your answer.
food, italian indian, mexican, Lasagna, pizza, tikka masala, saag, burrito

Given the tree above, in what order would a Depth First Search (DFS) algorithm visit each node until finding Chicago-style (starting at food)? Just list the order of nodes visited; no need to recreate the state of the algorithm data in your answer.

Food, Mexican, enchiladas, tacos, burrito, indian, saag, tikka masala, italian, pizza, sicilian, New York Style, Chicago style

How is a binary search tree different from other trees?
A node in binary search tree has two sub-nodes, left sub-node are bigger then the parent-node and right sub-node are smaller than the parent-node. Since the tree node are sorted, the run time to search in a binary tree will be better than regular tree. 



